---
import '$lib/styles/global.css';
import config from '@config';
import Buttons from '$lib/components/Buttons.astro';
import Clock from '$lib/components/Clock.svelte';
import Weather from '$lib/components/Weather.svelte';

const gradientBase: string = config.colors.baseBg + 'FF';
const gradientEnd: string = config.colors.baseBg + '00';
const src = config.image.src ?? '';
const imageSrc = `url(${src.match(/^https?:\/\//) ? src : `${import.meta.env.BASE_URL}/${src}`})`;
---

<!doctype html>
<html lang="en" class="bg-base text-primarytext m-0 size-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}/favicon.svg`} />
    <meta name="generator" content={Astro.generator} />
    <title>Newt</title>
  </head>
  <body
    class:list={[
      'gap-config flex size-full flex-col items-center justify-center',
      { 'bg-image': config.image.enabled },
    ]}
  >
    <div class="flex gap-64">
      <div class="flex flex-col items-center justify-center gap-3">
        <Clock client:load />
        <!-- Greeting -->
        <span class="text-3xl" id="greeting-text"></span>
      </div>
      <div>
        <span class="text-8xl font-bold">{new Date().toLocaleDateString(config.locale, config.dateFormat)}</span>
        <Weather client:load />
      </div>
    </div>
    <Buttons />
  </body>
</html>

<script define:vars={{ config }}>
  function getGreeter() {
    const hour = new Date().getHours();
    if (hour >= 23 || hour < 6) {
      return `${config.greetings.late}, ${config.name}${config.greetings.punc}`;
    } else if (hour >= 6 && hour < 12) {
      return `${config.greetings.morning}, ${config.name}${config.greetings.punc}`;
    } else if (hour >= 12 && hour < 17) {
      return `${config.greetings.evening}, ${config.name}${config.greetings.punc}`;
    } else {
      return `${config.greetings.night}, ${config.name}${config.greetings.punc}`;
    }
  }

  document.getElementById('greeting-text').innerHTML = getGreeter();
</script>

<style define:vars={{ gradientBase, gradientEnd, imageSrc, gapSize: `${config.midgap}rem` }}>
  .bg-image {
    background-image: linear-gradient(var(--gradientBase), var(--gradientEnd)), var(--imageSrc);
    background-size: cover;
  }

  .gap-config {
    gap: calc(var(--gapSize) / 4);
  }
</style>
